$file1 = Get-Content "file1.txt" -Raw
$file2 = Get-Content "file2.txt" -Raw

$words1 = $file1 -split '\s+'
$words2 = $file2 -split '\s+'

Compare-Object $words1 $words2 | Format-Table -AutoSize

--------

powershell -ExecutionPolicy Bypass -File compare_words.ps1

--------

(Get-Content "gt.txt" -Raw) -split '\s+', 0 | Where-Object { $_ -ne '' } | Measure-Object | Select-Object -ExpandProperty Count


---------

(Get-Content "gt.txt" -Raw) -split ' +', 0 | Where-Object { $_ -ne '' } | Measure-Object | Select-Object -ExpandProperty Count

----------

=IF(A1="", 0, LEN(TRIM(A1)) - LEN(SUBSTITUTE(A1, " ", "")) + 1

==========

import os
import shutil

ROOT_DIR = "j:/tmp/vad/synthetics/separate/"
OUTPUT_DIR = "j:/tmp/vad/synthetics/both/"
CUSTOMER_SUFFIX = "_Cust"
AGENT_SUFFIX = "_Agent"
WAV_EXTENSION = ".txt"

def create_output_dir(output_dir):
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

def process_subdir(subdir_path, subdir_name, output_dir):
    modified_subdir = subdir_name.replace('.', '_')
    files = os.listdir(subdir_path)
    cust_file = None
    agent_file = None
    for f in files:
        if f.endswith(f"{CUSTOMER_SUFFIX}{WAV_EXTENSION}"):
            cust_file = f
        elif f.endswith(f"{AGENT_SUFFIX}{WAV_EXTENSION}"):
            agent_file = f
    if cust_file:
        prefix = cust_file[:-len(f"{CUSTOMER_SUFFIX}{WAV_EXTENSION}")]
        new_filename = f"{prefix}{CUSTOMER_SUFFIX}_{modified_subdir}{WAV_EXTENSION}"
        src_path = os.path.join(subdir_path, cust_file)
        dest_path = os.path.join(output_dir, new_filename)
        shutil.copy(src_path, dest_path)
    if agent_file:
        prefix = agent_file[:-len(f"{AGENT_SUFFIX}{WAV_EXTENSION}")]
        new_filename = f"{prefix}{AGENT_SUFFIX}_{modified_subdir}{WAV_EXTENSION}"
        src_path = os.path.join(subdir_path, agent_file)
        dest_path = os.path.join(output_dir, new_filename)
        shutil.copy(src_path, dest_path)

def main():
    create_output_dir(OUTPUT_DIR)
    for entry in os.listdir(ROOT_DIR):
        subdir_path = os.path.join(ROOT_DIR, entry)
        if os.path.isdir(subdir_path):
            process_subdir(subdir_path, entry, OUTPUT_DIR)

if __name__ == "__main__":
    main()