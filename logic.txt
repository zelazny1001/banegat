def create_wer_comparison(
    wb: Workbook,
    wer_sheet_name: str,
    compare_sheet_name: str,
) -> None:
    from openpyxl.styles import Font
    from openpyxl.utils import get_column_letter

    # build filename → {condition: wer, …}
    ws_w = wb[wer_sheet_name]
    mapping: Dict[str, Dict[str, str]] = {}
    conditions: List[str] = []
    for fn, cond, *_, wer in ws_w.iter_rows(min_row=2, values_only=True):
        mapping.setdefault(fn, {})[cond] = wer
        if cond not in conditions:
            conditions.append(cond)

    # create the compare sheet
    ws_c = wb.create_sheet(compare_sheet_name)
    # header: filename, (conditions, WER) × N
    header = ["filename"] + sum((["conditions", "WER"] for _ in conditions), [])
    ws_c.append(header)

    # data rows
    for fn, cm in mapping.items():
        row = [fn]
        for cond in conditions:
            row += [cond, cm.get(cond, "")]
        ws_c.append(row)

    # styling
    hf = Font(name="Aptos", size=9, bold=True)
    df = Font(name="Aptos", size=9)
    ncols = 1 + 2 * len(conditions)
    for cell in ws_c[1]:
        cell.font = hf
    for r in ws_c.iter_rows(min_row=2, max_col=ncols):
        for cell in r:
            cell.font = df
    ws_c.freeze_panes = "A2"
    ws_c.auto_filter.ref = f"A1:{get_column_letter(ncols)}{ws_c.max_row}"

    # widths: first col + repeated CONDITIONS_WIDTH, WER_WIDTH
    from __main__ import FILENAME_WIDTH, CONDITIONS_WIDTH, WER_WIDTH
    ws_c.column_dimensions[get_column_letter(1)].width = FILENAME_WIDTH
    for i in range(len(conditions)):
        ws_c.column_dimensions[get_column_letter(2 + 2*i)].width = CONDITIONS_WIDTH
        ws_c.column_dimensions[get_column_letter(3 + 2*i)].width = WER_WIDTH

# ==================

# in main(), after consolidating and loading the workbook:
from openpyxl import load_workbook

wb = load_workbook(CONSOLIDATED_OUTPUT_SPREADSHEET)
create_wer_comparison(
    wb,
    WER_WORKSHEET,
    WER_COMPARISON,
)
wb.save(CONSOLIDATED_OUTPUT_SPREADSHEET)