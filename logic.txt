def create_consolidated_spreadsheet(
    output_root_dir: str,
    analysis_worksheet: str,
    first_sheet_headers: List[str],
    wer_worksheet: str,
    wer_sheet_headers: List[str],
) -> None:
    from openpyxl import Workbook, load_workbook
    from openpyxl.styles import Font
    from openpyxl.utils import get_column_letter

    consolidated_path = os.path.join(output_root_dir, "consolidated_analysis.xlsx")
    wb_out = Workbook()
    ws_a = wb_out.active
    ws_a.title = analysis_worksheet
    ws_a.append(first_sheet_headers)
    ws_w = wb_out.create_sheet(wer_worksheet)
    ws_w.append(wer_sheet_headers)

    for fname in os.listdir(output_root_dir):
        if not fname.endswith(".xlsx") or fname == "consolidated_analysis.xlsx":
            continue
        path = os.path.join(output_root_dir, fname)
        wb_in = load_workbook(path, data_only=True)
        if analysis_worksheet in wb_in.sheetnames:
            for row in wb_in[analysis_worksheet].iter_rows(min_row=2, values_only=True):
                ws_a.append(row)
        if wer_worksheet in wb_in.sheetnames:
            for row in wb_in[wer_worksheet].iter_rows(min_row=2, values_only=True):
                ws_w.append(row)

    hf = Font(name="Aptos", size=9, bold=True)
    df = Font(name="Aptos", size=9)

    # style analysis sheet
    for cell in ws_a[1]:
        cell.font = hf
    for row in ws_a.iter_rows(min_row=2, max_col=len(first_sheet_headers)):
        for cell in row:
            cell.font = df
    ws_a.freeze_panes = "A2"
    ws_a.auto_filter.ref = f"A1:{get_column_letter(len(first_sheet_headers))}{ws_a.max_row}"
    for idx, w in enumerate(
        [FILENAME_WIDTH, CONDITIONS_WIDTH, SEQNUM_WIDTH, LOC_WIDTH, DUR_WIDTH, TRANSCRIPT_WIDTH],
        start=1
    ):
        ws_a.column_dimensions[get_column_letter(idx)].width = w

    # style WER sheet
    for cell in ws_w[1]:
        cell.font = hf
    for row in ws_w.iter_rows(min_row=2, max_col=len(wer_sheet_headers)):
        for cell in row:
            cell.font = df
    ws_w.freeze_panes = "A2"
    ws_w.auto_filter.ref = f"A1:{get_column_letter(len(wer_sheet_headers))}{ws_w.max_row}"
    for idx, w in enumerate(
        [FILENAME_WIDTH, CONDITIONS_WIDTH, FULL_TRANSCRIPT_WIDTH, GT_WIDTH, WER_WIDTH],
        start=1
    ):
        ws_w.column_dimensions[get_column_letter(idx)].width = w

    wb_out.save(consolidated_path)


# in main(), after processing all files:
    create_consolidated_spreadsheet(
        output_root_dir,
        ANALYSIS_WORKSHEET,
        FIRST_SHEET_HEADERS,
        WER_WORKSHEET,
        WER_SHEET_HEADERS,
    )