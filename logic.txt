# brace_the_transcript_using_gt.py - apply braces to transcript based on ground truth.
from __future__ import annotations
import re
from openpyxl import load_workbook
from openpyxl.styles import Font
from openpyxl.utils import get_column_letter

SPREADSHEET_DIR = "j:/tmp/braces/"
SPREADSHEET_LOCATION = SPREADSHEET_DIR + "test-braces.xlsx"
WORKSHEET_NAME     = "Sheet1"
INDECIPHERABLE     = r"(?i)\{INDECIPHERABLE\}"

GROUND_TRUTH_COL = "ground_truth"
TRANSCRIPT_COL   = "transcript"
BRACED_COL       = "braced_transcript"

def collapse_spaces(text: str) -> str:
    return re.sub(r' +', ' ', text)

def highlight_indecipherable(source: str, target: str) -> str:
    source = collapse_spaces(source).strip()
    target = collapse_spaces(target)
    if "{" in target or "}" in target:
        return target
    if "{" not in source:
        return target
    parts = re.split(INDECIPHERABLE, source) # we expect {INDECIPHERABLE} in source
    if len(parts) == 2 and not parts[0].strip() and not parts[1].strip():
        return f"{{{target.strip()}}}"
    fixeds = [p.strip() for p in parts]
    pattern = "^" + "".join(
        re.escape(fixeds[i]) + "(.*?)"
        for i in range(len(fixeds) - 1)
    ) + re.escape(fixeds[-1]) + "$"
    m = re.match(pattern, target.strip(), flags=re.DOTALL)
    if not m:
        return f"{{{target.strip()}}}"
    groups = m.groups()
    output = fixeds[0]
    for i, hidden in enumerate(groups, start=1):
        output += " {" + hidden.strip() + "} " + fixeds[i]
    return output.strip()

def update_braced_transcripts(spreadsheet_path: str) -> None:
    wb = load_workbook(spreadsheet_path)
    ws = wb[WORKSHEET_NAME]
    headers = [cell.value for cell in ws[1]]
    if BRACED_COL not in headers:
        headers.append(BRACED_COL)
        ws.cell(row=1, column=len(headers), value=BRACED_COL)
    br_idx = headers.index(BRACED_COL) + 1
    gt_idx = headers.index(GROUND_TRUTH_COL) + 1
    tr_idx = headers.index(TRANSCRIPT_COL) + 1

    # set width and header styling for the braced_transcript column
    col_letter = get_column_letter(br_idx)
    ws.column_dimensions[col_letter].width = 60
    ws.cell(row=1, column=br_idx).font = Font(name="Aptos", size=9, bold=True)
    ws.cell(row=1, column=gt_idx).font = Font(name="Aptos", size=9, bold=True)

    for r in range(2, ws.max_row + 1):
        source = ws.cell(row=r, column=gt_idx).value or ""
        target = ws.cell(row=r, column=tr_idx).value or ""
        cell = ws.cell(row=r, column=br_idx, value=highlight_indecipherable(source, target))
        cell.font = Font(name="Aptos", size=9)
    wb.save(spreadsheet_path)

if __name__ == "__main__":
    update_braced_transcripts(SPREADSHEET_LOCATION)