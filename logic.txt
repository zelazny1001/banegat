def cross_val_predict_with_progress(model, X, y, cv_folds: int) -> np.ndarray:
    skf = StratifiedKFold(n_splits=cv_folds, shuffle=True, random_state=42)
    splits = list(skf.split(X, y))  # fix: pre-materialize the generator
    y_pred = np.empty_like(y)
    for train_idx, test_idx in tqdm(splits, total=len(splits), desc="Cross-validation"):
        fold_model = clone(model)
        fold_model.fit(X[train_idx], y[train_idx])
        y_pred[test_idx] = fold_model.predict(X[test_idx])
    return y_pred