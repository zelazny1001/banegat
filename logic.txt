# vg_parallel_launcher.py
import sys
import subprocess
import time
import os

SCRIPT_ROOT = "/projects/root/"
SCRIPT_NAME = "local_voice_gateway_simulator_2.py"
NUM_INSTANCES = 10
INSTANCES_PER_SECOND = 100
POLL_INTERVAL = 0.2

def launch_instances(script_root, script_name, num_instances, rate):
    interval = 1.0 / rate
    start_time = time.time()
    script_path = os.path.join(script_root, script_name)
    procs = {}
    for i in range(1, num_instances + 1):
        target = start_time + (i - 1) * interval
        sleep = target - time.time()
        if sleep > 0:
            time.sleep(sleep)
        p = subprocess.Popen(
            [sys.executable, script_path],
            cwd=script_root
        )
        elapsed = time.time() - start_time
        print(f"[{i}/{num_instances}] Launched PID={p.pid} at {elapsed:.2f}s")
        procs[i] = p
    return procs, start_time

def monitor_processes(procs, start_time, poll_interval):
    remaining = set(procs)
    completed = 0
    total = len(procs)
    while remaining:
        for i in list(remaining):
            p = procs[i]
            if p.poll() is not None:
                completed += 1
                elapsed = time.time() - start_time
                print(f"[{completed}/{total}] Elapsed: {elapsed:.2f}s")
                remaining.remove(i)
        time.sleep(poll_interval)
    print("All instances completed.")

def main():
    procs, start_time = launch_instances(
        SCRIPT_ROOT,
        SCRIPT_NAME,
        NUM_INSTANCES,
        INSTANCES_PER_SECOND
    )
    monitor_processes(procs, start_time, POLL_INTERVAL)

if __name__ == "__main__":
    main()